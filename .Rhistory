}
# 组内
within_comparison <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = TRUE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = TRUE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = TRUE))
}
# data filter
day_1_control <- data %>%
filter(str_sub(exp_group,1,3) == "Con" & time_point == 1)
day_1_H1 <- data %>%
filter(str_sub(exp_group,1,4) == "H1st" & time_point == 1)
day_1_F1 <- data %>%
filter(str_sub(exp_group,1,4) == "F1st" & time_point == 1)
#Mann-Whitney U检验
group_compare(day_1_control,day_1_H1)
group_compare(day_1_control,day_1_F1)
group_compare(day_1_F1,day_1_H1)
# data filter
day_2_control <- data %>%
filter(str_sub(exp_group,1,3) == "Con" & time_point == 2)
day_2_H1 <- data %>%
filter(str_sub(exp_group,1,4) == "H1st" & time_point == 2)
day_2_F1 <- data %>%
filter(str_sub(exp_group,1,4) == "F1st" & time_point == 2)
#Mann-Whitney U检验
group_compare(day_2_control,day_2_H1)
group_compare(day_2_control,day_2_F1)
group_compare(day_2_F1,day_2_H1)
# data filter
day_3_control <- data %>%
filter(str_sub(exp_group,1,3) == "Con" & time_point == 3)
day_3_H1 <- data %>%
filter(str_sub(exp_group,1,4) == "H1st" & time_point == 3)
day_3_F1 <- data %>%
filter(str_sub(exp_group,1,4) == "F1st" & time_point == 3)
#Mann-Whitney U检验
group_compare(day_3_control,day_3_H1)
group_compare(day_3_control,day_3_F1)
group_compare(day_3_F1,day_3_H1)
within_comparison(day_1_control,day_2_control)
within_comparison(day_2_control,day_3_control)
within_comparison(day_1_H1,day_2_H1)
within_comparison(day_2_H1,day_3_H1)
within_comparison(day_1_F1,day_2_F1)
within_comparison(day_2_F1,day_3_F1)
View(data)
data_t<-read_excel('DADY_targeted_coding.xlsx')
View(data_t)
library(tidyverse)
library(readxl)
data<-read_excel('DADY_targeted_coding.xlsx')
data[data == "N/A"] <- NA
data$JA[is.na(data$JA)] <- 0 // NA -> 0
library(tidyverse)
library(readxl)
data<-read_excel('DADY_targeted_coding.xlsx')
data[data == "N/A"] <- NA
data$JA[is.na(data$JA)] <- 0 # NA -> 0
data$JA <- as.numeric(data$JA) # 将值转为数值型
sink("output_log.txt")
print("这是一个测试")
sink()
sink("output_log.txt") # 将R的输出重定向到一个文件
full_data <- read.csv("DADY_untargeted_coding_setup.xlsx")
full_data <- read_excel("DADY_untargeted_coding_setup.xlsx")
full_data <- read_excel("DADY_untargeted_coding_setup.xlsx")
print(data[3, ])
full_data <- read_excel("DADY_untargeted_coding_setup.xlsx")
print(full_data[3, ])
View(full_data)
full_data <- read_excel("DADY_untargeted_coding_setup.xlsx")
print(full_data[2, ])
full_data <- read_excel("DADY_untargeted_coding_setup.xlsx")
print(full_data[2, ])
exp_data = full_data[9:389, ]
View(exp_data)
full_data <- read_excel("DADY_untargeted_coding_setup.xlsx")
print(full_data[2, ])
exp_data = full_data[9:388, ]
full_data <- read_excel("DADY_untargeted_coding_setup.xlsx")
print(full_data[2, ])
exp_data = full_data[8:388, ]
View(exp_data)
full_data <- read_excel("DADY_untargeted_coding_setup.xlsx")
print(full_data[2, ])
exp_data = full_data[8:388, ]
exp_data[is.na(exp_data)] <- 0
full_data <- read_excel("DADY_untargeted_coding_setup.xlsx")
print(full_data[2, ])
exp_data = full_data[8:388, ]
exp_data[is.na(exp_data)] <- 0.0
full_data <- read_excel("DADY_untargeted_coding_setup.xlsx")
print(full_data[2, ])
exp_data = full_data[8:388, ]
exp_data[exp_data == "N/A"] <- NA
exp_data[is.na(exp_data)] <- 0.0
full_data <- read_excel("DADY_untargeted_coding_setup.xlsx")
print(full_data[2, ])
exp_data = full_data[8:388, ]
exp_data[exp_data == "N/A"] <- NA
exp_data[is.na(exp_data)] <- "0.0"
full_data <- read_excel("DADY_untargeted_coding_setup.xlsx")
print(full_data[2, ])
exp_data = full_data[8:388, ]
exp_data[exp_data == "N/A"] <- NA
exp_data[is.na(exp_data)] <- "0"
str(exp_data)
full_data <- read_excel("DADY_untargeted_coding_setup.xlsx")
print(full_data[2, ])
exp_data = full_data[8:388, ]
exp_data[exp_data == "N/A"] <- NA
exp_data[is.na(exp_data)] <- "0"
exp_data[3:29] <- lapply(exp_data[3:29], as.numeric)
full_data <- read_excel("DADY_untargeted_coding_setup.xlsx")
print(full_data[2, ])
exp_data = full_data[8:388, ]
exp_data[exp_data == "N/A"] <- NA
exp_data[is.na(exp_data)] <- "0"
exp_data[3:29] <- lapply(exp_data[2:29], as.numeric)
full_data <- read_excel("DADY_untargeted_coding_setup.xlsx")
print(full_data[2, ])
exp_data = full_data[8:388, ]
exp_data[exp_data == "N/A"] <- NA
exp_data[is.na(exp_data)] <- "0"
exp_data[3:29] <- lapply(exp_data[3:29], as.numeric)
full_data <- read_excel("DADY_untargeted_coding_setup.xlsx")
print(full_data[2, ])
exp_data = full_data[8:388, ]
exp_data[exp_data == "N/A"] <- NA
exp_data[is.na(exp_data)] <- "0"
exp_data[3:29] <- lapply(exp_data[3:30], as.numeric)
full_data <- read_excel("DADY_untargeted_coding_setup.xlsx")
print(full_data[2, ])
exp_data = full_data[8:388, ]
exp_data[exp_data == "N/A"] <- NA
exp_data[is.na(exp_data)] <- "0"
exp_data[3:29] <- lapply(exp_data[3:29], as.numeric)
View(exp_data)
# 组间
group_compare <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = FALSE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = FALSE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = FALSE))
}
# 组内
within_comparison <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = TRUE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = TRUE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = TRUE))
}
for (i in 1:nrow(exp_data)) {
row_data <- exp_data[i, ]
# 在这里可以对row_data进行操作
# 例如，打印当前行的数据
print(row_data)
}
# 组间
group_compare <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = FALSE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = FALSE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = FALSE))
}
# 组内
within_comparison <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = TRUE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = TRUE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = TRUE))
}
for (i in 1:nrow(exp_data)) {
row_data <- exp_data[i, ]
# 在这里可以对row_data进行操作
# 例如，打印当前行的数据
print(1)
}
# 组间
group_compare <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = FALSE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = FALSE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = FALSE))
}
# 组内
within_comparison <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = TRUE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = TRUE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = TRUE))
}
for (i in 1:nrow(exp_data)) {
row_data <- exp_data[i, ]
# 在这里可以对row_data进行操作
# 例如，打印当前行的数据
print(row_data)
}
# 组间
group_compare <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = FALSE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = FALSE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = FALSE))
}
# 组内
within_comparison <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = TRUE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = TRUE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = TRUE))
}
for (i in 1:nrow(exp_data)) {
row_data <- exp_data[i, ]
# 在这里可以对row_data进行操作
# 例如，打印当前行的数据
print(1)
}
sink() # 停止重定向输出
sink("output_log.txt") # 将R的输出重定向到一个文件
sink("output_log.txt", type = "message")
sink("output_log.txt") # 将R的输出重定向到一个文件
sink("output_log.txt", type = "message")
sink("output_log.txt") # 将R的输出重定向到一个文件
sink("output_log.txt", type = "message")
sink("output_log.txt") # 将R的输出重定向到一个文件
sink("output_log.txt", type = "message")
sink("output_log.txt") # 将R的输出重定向到一个文件
# 组间
group_compare <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = FALSE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = FALSE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = FALSE))
}
# 组内
within_comparison <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = TRUE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = TRUE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = TRUE))
}
for (i in 1:nrow(exp_data)) {
row_data <- exp_data[i, ]
# 在这里可以对row_data进行操作
# 例如，打印当前行的数据
print(1)
}
# 组间
group_compare <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = FALSE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = FALSE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = FALSE))
}
# 组内
within_comparison <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = TRUE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = TRUE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = TRUE))
}
for (i in 1:nrow(exp_data)) {
row_data <- exp_data[i, ]
cat("Between-group comparison:\nTest: similar level of metabolites on day 1", file = "output_log.txt", append = TRUE)
# 在这里可以对row_data进行操作
# 例如，打印当前行的数据
}
View(day_1_control)
print(wilcox.test(1, 2, paired = FALSE))
print(wilcox.test(1, 2, paired = FALSE))
# 组间
group_compare <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = FALSE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = FALSE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = FALSE))
}
# 组内
within_comparison <- function(group_name_1, group_name_2) {
cat(wilcox.test(group_name_1$JA, group_name_2$JA, paired = TRUE), append = TRUE)
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = TRUE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = TRUE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = TRUE))
}
# data filter
day_1_control <- data %>%
filter(str_sub(exp_group,1,3) == "Con" & time_point == 1)
day_1_H1 <- data %>%
filter(str_sub(exp_group,1,4) == "H1st" & time_point == 1)
day_1_F1 <- data %>%
filter(str_sub(exp_group,1,4) == "F1st" & time_point == 1)
#Mann-Whitney U检验
group_compare(day_1_control,day_1_H1)
group_compare(day_1_control,day_1_F1)
group_compare(day_1_F1,day_1_H1)
# 组间
group_compare <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = FALSE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = FALSE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = FALSE))
}
# 组内
within_comparison <- function(group_name_1, group_name_2) {
cat(wilcox.test(group_name_1$JA, group_name_2$JA, paired = TRUE), append = TRUE)
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = TRUE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = TRUE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = TRUE))
}
# data filter
day_1_control <- data %>%
filter(str_sub(exp_group,1,3) == "Con" & time_point == 1)
day_1_H1 <- data %>%
filter(str_sub(exp_group,1,4) == "H1st" & time_point == 1)
day_1_F1 <- data %>%
filter(str_sub(exp_group,1,4) == "F1st" & time_point == 1)
#Mann-Whitney U检验
group_compare(day_1_control,day_1_H1)
group_compare(day_1_control,day_1_F1)
group_compare(day_1_F1,day_1_H1)
# 组间
group_compare <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = FALSE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = FALSE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = FALSE))
}
# 组内
within_comparison <- function(group_name_1, group_name_2) {
# cat(wilcox.test(group_name_1$JA, group_name_2$JA, paired = TRUE), append = TRUE)
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = TRUE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = TRUE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = TRUE))
}
# data filter
day_1_control <- data %>%
filter(str_sub(exp_group,1,3) == "Con" & time_point == 1)
day_1_H1 <- data %>%
filter(str_sub(exp_group,1,4) == "H1st" & time_point == 1)
day_1_F1 <- data %>%
filter(str_sub(exp_group,1,4) == "F1st" & time_point == 1)
#Mann-Whitney U检验
group_compare(day_1_control,day_1_H1)
group_compare(day_1_control,day_1_F1)
group_compare(day_1_F1,day_1_H1)
# 组间
group_compare <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = FALSE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = FALSE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = FALSE))
}
# 组内
within_comparison <- function(group_name_1, group_name_2) {
# cat(wilcox.test(group_name_1$JA, group_name_2$JA, paired = TRUE), append = TRUE)
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = TRUE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = TRUE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = TRUE))
}
# data filter
day_1_control <- data %>%
filter(str_sub(exp_group,1,3) == "Con" & time_point == 1)
day_1_H1 <- data %>%
filter(str_sub(exp_group,1,4) == "H1st" & time_point == 1)
day_1_F1 <- data %>%
filter(str_sub(exp_group,1,4) == "F1st" & time_point == 1)
#Mann-Whitney U检验
group_compare(day_1_control,day_1_H1)
group_compare(day_1_control,day_1_F1)
group_compare(day_1_F1,day_1_H1)
library(tidyverse)
library(readxl)
data<-read_excel('DADY_targeted_coding.xlsx')
data[data == "N/A"] <- NA
data$JA[is.na(data$JA)] <- 0 # NA -> 0
data$JA <- as.numeric(data$JA) # 将值转为数值型
# 组间
group_compare <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = FALSE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = FALSE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = FALSE))
}
# 组内
within_comparison <- function(group_name_1, group_name_2) {
# cat(wilcox.test(group_name_1$JA, group_name_2$JA, paired = TRUE), append = TRUE)
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = TRUE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = TRUE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = TRUE))
}
# data filter
day_1_control <- data %>%
filter(str_sub(exp_group,1,3) == "Con" & time_point == 1)
day_1_H1 <- data %>%
filter(str_sub(exp_group,1,4) == "H1st" & time_point == 1)
day_1_F1 <- data %>%
filter(str_sub(exp_group,1,4) == "F1st" & time_point == 1)
#Mann-Whitney U检验
group_compare(day_1_control,day_1_H1)
group_compare(day_1_control,day_1_F1)
group_compare(day_1_F1,day_1_H1)
# data filter
day_2_control <- data %>%
filter(str_sub(exp_group,1,3) == "Con" & time_point == 2)
day_2_H1 <- data %>%
filter(str_sub(exp_group,1,4) == "H1st" & time_point == 2)
day_2_F1 <- data %>%
filter(str_sub(exp_group,1,4) == "F1st" & time_point == 2)
#Mann-Whitney U检验
group_compare(day_2_control,day_2_H1)
group_compare(day_2_control,day_2_F1)
group_compare(day_2_F1,day_2_H1)
# data filter
day_3_control <- data %>%
filter(str_sub(exp_group,1,3) == "Con" & time_point == 3)
day_3_H1 <- data %>%
filter(str_sub(exp_group,1,4) == "H1st" & time_point == 3)
day_3_F1 <- data %>%
filter(str_sub(exp_group,1,4) == "F1st" & time_point == 3)
#Mann-Whitney U检验
group_compare(day_3_control,day_3_H1)
group_compare(day_3_control,day_3_F1)
group_compare(day_3_F1,day_3_H1)
within_comparison(day_1_control,day_2_control)
within_comparison(day_2_control,day_3_control)
within_comparison(day_1_H1,day_2_H1)
within_comparison(day_2_H1,day_3_H1)
within_comparison(day_1_F1,day_2_F1)
within_comparison(day_2_F1,day_3_F1)
library(tidyverse)
library(readxl)
data<-read_excel('DADY_targeted_coding.xlsx')
data[data == "N/A"] <- NA
data$JA[is.na(data$JA)] <- 0
data$JA <- as.numeric(data$JA)
# 组间
group_compare <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = FALSE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = FALSE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = FALSE))
}
# 组内
within_comparison <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = TRUE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = TRUE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = TRUE))
}
# data filter
day_1_control <- data %>%
filter(str_sub(exp_group,1,3) == "Con" & time_point == 1)
day_1_H1 <- data %>%
filter(str_sub(exp_group,1,4) == "H1st" & time_point == 1)
day_1_F1 <- data %>%
filter(str_sub(exp_group,1,4) == "F1st" & time_point == 1)
#Mann-Whitney U检验
group_compare(day_1_control,day_1_H1)
group_compare(day_1_control,day_1_F1)
group_compare(day_1_F1,day_1_H1)
# data filter
day_1_control <- data %>%
filter(str_sub(exp_group,1,3) == "Con" & time_point == 1)
day_1_H1 <- data %>%
filter(str_sub(exp_group,1,4) == "H1st" & time_point == 1)
day_1_F1 <- data %>%
filter(str_sub(exp_group,1,4) == "F1st" & time_point == 1)
#Mann-Whitney U检验
group_compare(day_1_control,day_1_H1)
group_compare(day_1_control,day_1_F1)
group_compare(day_1_F1,day_1_H1)
library(tidyverse)
library(readxl)
data<-read_excel('DADY_targeted_coding.xlsx')
data[data == "N/A"] <- NA
data$JA[is.na(data$JA)] <- 0
data$JA <- as.numeric(data$JA)
# 组间
group_compare <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = FALSE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = FALSE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = FALSE))
}
# 组内
within_comparison <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = TRUE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = TRUE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = TRUE))
}
# data filter
day_1_control <- data %>%
filter(str_sub(exp_group,1,3) == "Con" & time_point == 1)
day_1_H1 <- data %>%
filter(str_sub(exp_group,1,4) == "H1st" & time_point == 1)
day_1_F1 <- data %>%
filter(str_sub(exp_group,1,4) == "F1st" & time_point == 1)
#Mann-Whitney U检验
group_compare(day_1_control,day_1_H1)
group_compare(day_1_control,day_1_F1)
group_compare(day_1_F1,day_1_H1)
library(tidyverse)
library(readxl)
data<-read_excel('DADY_targeted_coding.xlsx')
data[data == "N/A"] <- NA
data$JA[is.na(data$JA)] <- 0
data$JA <- as.numeric(data$JA)
# 组间
group_compare <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = FALSE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = FALSE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = FALSE))
}
# 组内
within_comparison <- function(group_name_1, group_name_2) {
print(wilcox.test(group_name_1$JA, group_name_2$JA, paired = TRUE))
print(wilcox.test(group_name_1$SA, group_name_2$SA, paired = TRUE))
print(wilcox.test(group_name_1$ABA, group_name_2$ABA, paired = TRUE))
}
# data filter
day_1_control <- data %>%
filter(str_sub(exp_group,1,3) == "Con" & time_point == 1)
day_1_H1 <- data %>%
filter(str_sub(exp_group,1,4) == "H1st" & time_point == 1)
day_1_F1 <- data %>%
filter(str_sub(exp_group,1,4) == "F1st" & time_point == 1)
#Mann-Whitney U检验
group_compare(day_1_control,day_1_H1)
group_compare(day_1_control,day_1_F1)
group_compare(day_1_F1,day_1_H1)
